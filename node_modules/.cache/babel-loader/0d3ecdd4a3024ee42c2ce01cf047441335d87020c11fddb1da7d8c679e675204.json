{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport './App.css';\nimport { useFirebase } from './hooks/useFirebase';\nimport Employee from './components/Employee';\nimport Department from './components/Department';\nimport EmployeeModal from './components/EmployeeModal';\nimport DepartmentModal from './components/DepartmentModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    data,\n    setData,\n    status,\n    saveData,\n    resetData,\n    testConnection\n  } = useFirebase();\n\n  // Estados dos modais\n  const [employeeModalOpen, setEmployeeModalOpen] = useState(false);\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n  const [currentEmployee, setCurrentEmployee] = useState(null);\n  const [currentDepartment, setCurrentDepartment] = useState(null);\n\n  // Estados do formulário de novo funcionário\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    role: '',\n    dept: ''\n  });\n\n  // Estados de edição de título\n  const [editingTitle, setEditingTitle] = useState(null);\n  const [tempTitle, setTempTitle] = useState('');\n  const titleInputRef = useRef();\n\n  // Estados de drag and drop\n  const [draggedType, setDraggedType] = useState(null);\n  const [draggedId, setDraggedId] = useState(null);\n\n  // Função auxiliar para atualizar dados e salvar\n  const updateDataAndSave = useCallback(newData => {\n    setData(newData);\n    saveData(newData);\n  }, [setData, saveData]);\n\n  // Handlers do formulário de novo funcionário\n  const handleNewEmployeeChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddEmployee = e => {\n    e.preventDefault();\n    if (!newEmployee.name.trim() || !newEmployee.role.trim()) {\n      alert('Preencha nome e cargo.');\n      return;\n    }\n    const newData = {\n      ...data,\n      employeeCounter: data.employeeCounter + 1,\n      employees: [...data.employees, {\n        id: data.employeeCounter + 1,\n        name: newEmployee.name.trim(),\n        role: newEmployee.role.trim(),\n        dept: newEmployee.dept || null,\n        email: '',\n        phone: '',\n        notes: ''\n      }]\n    };\n    updateDataAndSave(newData);\n    setNewEmployee({\n      name: '',\n      role: '',\n      dept: ''\n    });\n  };\n\n  // Handlers dos modais\n  const openEmployeeModal = empId => {\n    const employee = data.employees.find(e => e.id == empId);\n    if (employee) {\n      setCurrentEmployee(employee);\n      setEmployeeModalOpen(true);\n    }\n  };\n  const openDepartmentModal = deptId => {\n    const department = data.departments.find(d => d.id === deptId);\n    if (department) {\n      setCurrentDepartment(department);\n      setDepartmentModalOpen(true);\n    }\n  };\n  const handleEmployeeSave = updatedEmployee => {\n    const newData = {\n      ...data,\n      employees: data.employees.map(emp => emp.id == updatedEmployee.id ? updatedEmployee : emp)\n    };\n    updateDataAndSave(newData);\n  };\n  const handleDepartmentSave = updatedDepartment => {\n    const newData = {\n      ...data,\n      departments: data.departments.map(dept => dept.id === updatedDepartment.id ? updatedDepartment : dept)\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handlers de remoção\n  const removeEmployee = empId => {\n    if (!window.confirm('Tem certeza que deseja remover este funcionário?')) return;\n    const newData = {\n      ...data,\n      employees: data.employees.filter(emp => emp.id != empId)\n    };\n    updateDataAndSave(newData);\n  };\n  const removeDepartment = deptId => {\n    if (!window.confirm('Remover este departamento? Funcionários voltarão para o pool.')) return;\n    const newData = {\n      ...data,\n      employees: data.employees.map(emp => emp.dept === deptId ? {\n        ...emp,\n        dept: null\n      } : emp),\n      departments: data.departments.filter(dept => dept.id !== deptId)\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handler para adicionar departamento\n  const addDepartment = () => {\n    const name = window.prompt('Nome do departamento:');\n    if (!name) return;\n    const id = 'dep' + Math.random().toString(36).slice(2, 9);\n    const newData = {\n      ...data,\n      departments: [...data.departments, {\n        id,\n        name,\n        manager: '',\n        description: '',\n        color: '#667eea'\n      }]\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handlers de edição de título\n  const startEditingTitle = type => {\n    setEditingTitle(type);\n    setTempTitle(type === 'title' ? data.title : data.subtitle);\n    setTimeout(() => {\n      if (titleInputRef.current) {\n        titleInputRef.current.focus();\n      }\n    }, 0);\n  };\n  const finishEditingTitle = () => {\n    const newData = {\n      ...data,\n      [editingTitle]: tempTitle\n    };\n    updateDataAndSave(newData);\n    setEditingTitle(null);\n  };\n  const handleTitleKeyDown = e => {\n    if (e.key === 'Enter') {\n      finishEditingTitle();\n    } else if (e.key === 'Escape') {\n      setTempTitle(editingTitle === 'title' ? data.title : data.subtitle);\n      setEditingTitle(null);\n    }\n  };\n\n  // Handlers de drag and drop\n  const handleDragStart = (type, id) => {\n    setDraggedType(type);\n    setDraggedId(id);\n  };\n  const handleDragEnd = () => {\n    setDraggedType(null);\n    setDraggedId(null);\n  };\n  const handleDrop = (draggedId, targetDeptId) => {\n    if (draggedType === 'employee') {\n      const newData = {\n        ...data,\n        employees: data.employees.map(emp => emp.id == draggedId ? {\n          ...emp,\n          dept: targetDeptId || null\n        } : emp)\n      };\n      updateDataAndSave(newData);\n    } else if (draggedType === 'department' && targetDeptId === null) {\n      // Reordenar departamentos (opcional)\n      const draggedDept = data.departments.find(d => d.id === draggedId);\n      if (draggedDept) {\n        const newData = {\n          ...data,\n          departments: [...data.departments.filter(d => d.id !== draggedId), draggedDept]\n        };\n        updateDataAndSave(newData);\n      }\n    }\n  };\n\n  // Handler para pool drop\n  const handlePoolDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drop-hover');\n    const draggedId = e.dataTransfer.getData('text/plain');\n    handleDrop(draggedId, null);\n  };\n  const handlePoolDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    if (draggedType === 'employee') {\n      e.currentTarget.classList.add('drop-hover');\n    }\n  };\n  const handlePoolDragLeave = e => {\n    e.currentTarget.classList.remove('drop-hover');\n  };\n\n  // Handler para edição rápida de título de departamento\n  const handleDepartmentTitleEdit = (deptId, newName) => {\n    const newData = {\n      ...data,\n      departments: data.departments.map(dept => dept.id === deptId ? {\n        ...dept,\n        name: newName\n      } : dept)\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handler para resetar\n  const handleReset = () => {\n    if (!window.confirm('Tem certeza? Isso apagará tudo!')) return;\n    resetData();\n  };\n\n  // Handler para exportar\n  const handleExport = () => {\n    const dataStr = JSON.stringify(data, null, 2);\n    const dataBlob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'organograma_backup.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Funcionários sem departamento\n  const poolEmployees = data.employees.filter(emp => !emp.dept);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-bar ${status.type} ${status.type !== 'connected' ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: status.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-form\",\n        onSubmit: handleAddEmployee,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Nome do Funcion\\xE1rio\",\n          value: newEmployee.name,\n          onChange: handleNewEmployeeChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"role\",\n          placeholder: \"Cargo\",\n          value: newEmployee.role,\n          onChange: handleNewEmployeeChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"dept\",\n          value: newEmployee.dept,\n          onChange: handleNewEmployeeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Pool\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), data.departments.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: dep.id,\n            children: dep.name\n          }, dep.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"submit\",\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: addDepartment,\n        children: \"\\u2795 Departamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleReset,\n        children: \"\\uD83D\\uDD04 Resetar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleExport,\n        children: \"\\uD83D\\uDCBE Exportar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: testConnection,\n        children: \"\\uD83D\\uDD27 Testar Conex\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-title\",\n      children: [editingTitle === 'title' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: titleInputRef,\n        type: \"text\",\n        value: tempTitle,\n        onChange: e => setTempTitle(e.target.value),\n        onBlur: finishEditingTitle,\n        onKeyDown: handleTitleKeyDown,\n        style: {\n          fontSize: '1.3em',\n          fontWeight: 'bold'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        onClick: () => startEditingTitle('title'),\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), editingTitle === 'subtitle' ? /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: titleInputRef,\n        type: \"text\",\n        value: tempTitle,\n        onChange: e => setTempTitle(e.target.value),\n        onBlur: finishEditingTitle,\n        onKeyDown: handleTitleKeyDown,\n        style: {\n          marginLeft: '18px',\n          fontSize: '1.05em'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => startEditingTitle('subtitle'),\n        style: {\n          marginLeft: '18px',\n          fontSize: '1.05em'\n        },\n        children: data.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-pool\",\n        onDrop: handlePoolDrop,\n        onDragOver: handlePoolDragOver,\n        onDragLeave: handlePoolDragLeave,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '8px',\n            fontWeight: 'bold'\n          },\n          children: \"Funcion\\xE1rios sem departamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), poolEmployees.map(emp => /*#__PURE__*/_jsxDEV(Employee, {\n          employee: emp,\n          departments: data.departments,\n          onDragStart: handleDragStart,\n          onDragEnd: handleDragEnd,\n          onEdit: openEmployeeModal,\n          onRemove: removeEmployee\n        }, emp.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"departments\",\n        children: data.departments.map(dept => /*#__PURE__*/_jsxDEV(Department, {\n          department: dept,\n          employees: data.employees,\n          departments: data.departments,\n          onDrop: handleDrop,\n          onDragStart: handleDragStart,\n          onDragEnd: handleDragEnd,\n          onEmployeeEdit: openEmployeeModal,\n          onEmployeeRemove: removeEmployee,\n          onDepartmentEdit: openDepartmentModal,\n          onDepartmentRemove: removeDepartment,\n          onTitleEdit: handleDepartmentTitleEdit\n        }, dept.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeModal, {\n      isOpen: employeeModalOpen,\n      onClose: () => setEmployeeModalOpen(false),\n      employee: currentEmployee,\n      departments: data.departments,\n      onSave: handleEmployeeSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DepartmentModal, {\n      isOpen: departmentModalOpen,\n      onClose: () => setDepartmentModalOpen(false),\n      department: currentDepartment,\n      onSave: handleDepartmentSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LYFk+pGYT1x1kFY5dsTHANDJVLw=\", false, function () {\n  return [useFirebase];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useFirebase","Employee","Department","EmployeeModal","DepartmentModal","jsxDEV","_jsxDEV","App","_s","data","setData","status","saveData","resetData","testConnection","employeeModalOpen","setEmployeeModalOpen","departmentModalOpen","setDepartmentModalOpen","currentEmployee","setCurrentEmployee","currentDepartment","setCurrentDepartment","newEmployee","setNewEmployee","name","role","dept","editingTitle","setEditingTitle","tempTitle","setTempTitle","titleInputRef","draggedType","setDraggedType","draggedId","setDraggedId","updateDataAndSave","newData","handleNewEmployeeChange","e","value","target","prev","handleAddEmployee","preventDefault","trim","alert","employeeCounter","employees","id","email","phone","notes","openEmployeeModal","empId","employee","find","openDepartmentModal","deptId","department","departments","d","handleEmployeeSave","updatedEmployee","map","emp","handleDepartmentSave","updatedDepartment","removeEmployee","window","confirm","filter","removeDepartment","addDepartment","prompt","Math","random","toString","slice","manager","description","color","startEditingTitle","type","title","subtitle","setTimeout","current","focus","finishEditingTitle","handleTitleKeyDown","key","handleDragStart","handleDragEnd","handleDrop","targetDeptId","draggedDept","handlePoolDrop","currentTarget","classList","remove","dataTransfer","getData","handlePoolDragOver","dropEffect","add","handlePoolDragLeave","handleDepartmentTitleEdit","newName","handleReset","handleExport","dataStr","JSON","stringify","dataBlob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","poolEmployees","className","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","dep","onClick","ref","onBlur","onKeyDown","style","fontSize","fontWeight","marginLeft","onDrop","onDragOver","onDragLeave","marginBottom","onDragStart","onDragEnd","onEdit","onRemove","onEmployeeEdit","onEmployeeRemove","onDepartmentEdit","onDepartmentRemove","onTitleEdit","isOpen","onClose","onSave","_c","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport './App.css';\nimport { useFirebase } from './hooks/useFirebase';\nimport Employee from './components/Employee';\nimport Department from './components/Department';\nimport EmployeeModal from './components/EmployeeModal';\nimport DepartmentModal from './components/DepartmentModal';\n\nfunction App() {\n  const { data, setData, status, saveData, resetData, testConnection } = useFirebase();\n  \n  // Estados dos modais\n  const [employeeModalOpen, setEmployeeModalOpen] = useState(false);\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n  const [currentEmployee, setCurrentEmployee] = useState(null);\n  const [currentDepartment, setCurrentDepartment] = useState(null);\n  \n  // Estados do formulário de novo funcionário\n  const [newEmployee, setNewEmployee] = useState({\n    name: '',\n    role: '',\n    dept: ''\n  });\n  \n  // Estados de edição de título\n  const [editingTitle, setEditingTitle] = useState(null);\n  const [tempTitle, setTempTitle] = useState('');\n  const titleInputRef = useRef();\n  \n  // Estados de drag and drop\n  const [draggedType, setDraggedType] = useState(null);\n  const [draggedId, setDraggedId] = useState(null);\n\n  // Função auxiliar para atualizar dados e salvar\n  const updateDataAndSave = useCallback((newData) => {\n    setData(newData);\n    saveData(newData);\n  }, [setData, saveData]);\n\n  // Handlers do formulário de novo funcionário\n  const handleNewEmployeeChange = (e) => {\n    const { name, value } = e.target;\n    setNewEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleAddEmployee = (e) => {\n    e.preventDefault();\n    if (!newEmployee.name.trim() || !newEmployee.role.trim()) {\n      alert('Preencha nome e cargo.');\n      return;\n    }\n    \n    const newData = {\n      ...data,\n      employeeCounter: data.employeeCounter + 1,\n      employees: [\n        ...data.employees,\n        {\n          id: data.employeeCounter + 1,\n          name: newEmployee.name.trim(),\n          role: newEmployee.role.trim(),\n          dept: newEmployee.dept || null,\n          email: '',\n          phone: '',\n          notes: ''\n        }\n      ]\n    };\n    \n    updateDataAndSave(newData);\n    setNewEmployee({ name: '', role: '', dept: '' });\n  };\n\n  // Handlers dos modais\n  const openEmployeeModal = (empId) => {\n    const employee = data.employees.find(e => e.id == empId);\n    if (employee) {\n      setCurrentEmployee(employee);\n      setEmployeeModalOpen(true);\n    }\n  };\n\n  const openDepartmentModal = (deptId) => {\n    const department = data.departments.find(d => d.id === deptId);\n    if (department) {\n      setCurrentDepartment(department);\n      setDepartmentModalOpen(true);\n    }\n  };\n\n  const handleEmployeeSave = (updatedEmployee) => {\n    const newData = {\n      ...data,\n      employees: data.employees.map(emp => \n        emp.id == updatedEmployee.id ? updatedEmployee : emp\n      )\n    };\n    updateDataAndSave(newData);\n  };\n\n  const handleDepartmentSave = (updatedDepartment) => {\n    const newData = {\n      ...data,\n      departments: data.departments.map(dept => \n        dept.id === updatedDepartment.id ? updatedDepartment : dept\n      )\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handlers de remoção\n  const removeEmployee = (empId) => {\n    if (!window.confirm('Tem certeza que deseja remover este funcionário?')) return;\n    \n    const newData = {\n      ...data,\n      employees: data.employees.filter(emp => emp.id != empId)\n    };\n    updateDataAndSave(newData);\n  };\n\n  const removeDepartment = (deptId) => {\n    if (!window.confirm('Remover este departamento? Funcionários voltarão para o pool.')) return;\n    \n    const newData = {\n      ...data,\n      employees: data.employees.map(emp => \n        emp.dept === deptId ? { ...emp, dept: null } : emp\n      ),\n      departments: data.departments.filter(dept => dept.id !== deptId)\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handler para adicionar departamento\n  const addDepartment = () => {\n    const name = window.prompt('Nome do departamento:');\n    if (!name) return;\n    \n    const id = 'dep' + Math.random().toString(36).slice(2, 9);\n    const newData = {\n      ...data,\n      departments: [\n        ...data.departments,\n        {\n          id,\n          name,\n          manager: '',\n          description: '',\n          color: '#667eea'\n        }\n      ]\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handlers de edição de título\n  const startEditingTitle = (type) => {\n    setEditingTitle(type);\n    setTempTitle(type === 'title' ? data.title : data.subtitle);\n    setTimeout(() => {\n      if (titleInputRef.current) {\n        titleInputRef.current.focus();\n      }\n    }, 0);\n  };\n\n  const finishEditingTitle = () => {\n    const newData = {\n      ...data,\n      [editingTitle]: tempTitle\n    };\n    updateDataAndSave(newData);\n    setEditingTitle(null);\n  };\n\n  const handleTitleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      finishEditingTitle();\n    } else if (e.key === 'Escape') {\n      setTempTitle(editingTitle === 'title' ? data.title : data.subtitle);\n      setEditingTitle(null);\n    }\n  };\n\n  // Handlers de drag and drop\n  const handleDragStart = (type, id) => {\n    setDraggedType(type);\n    setDraggedId(id);\n  };\n\n  const handleDragEnd = () => {\n    setDraggedType(null);\n    setDraggedId(null);\n  };\n\n  const handleDrop = (draggedId, targetDeptId) => {\n    if (draggedType === 'employee') {\n      const newData = {\n        ...data,\n        employees: data.employees.map(emp => \n          emp.id == draggedId ? { ...emp, dept: targetDeptId || null } : emp\n        )\n      };\n      updateDataAndSave(newData);\n    } else if (draggedType === 'department' && targetDeptId === null) {\n      // Reordenar departamentos (opcional)\n      const draggedDept = data.departments.find(d => d.id === draggedId);\n      if (draggedDept) {\n        const newData = {\n          ...data,\n          departments: [\n            ...data.departments.filter(d => d.id !== draggedId),\n            draggedDept\n          ]\n        };\n        updateDataAndSave(newData);\n      }\n    }\n  };\n\n  // Handler para pool drop\n  const handlePoolDrop = (e) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('drop-hover');\n    const draggedId = e.dataTransfer.getData('text/plain');\n    handleDrop(draggedId, null);\n  };\n\n  const handlePoolDragOver = (e) => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    if (draggedType === 'employee') {\n      e.currentTarget.classList.add('drop-hover');\n    }\n  };\n\n  const handlePoolDragLeave = (e) => {\n    e.currentTarget.classList.remove('drop-hover');\n  };\n\n  // Handler para edição rápida de título de departamento\n  const handleDepartmentTitleEdit = (deptId, newName) => {\n    const newData = {\n      ...data,\n      departments: data.departments.map(dept => \n        dept.id === deptId ? { ...dept, name: newName } : dept\n      )\n    };\n    updateDataAndSave(newData);\n  };\n\n  // Handler para resetar\n  const handleReset = () => {\n    if (!window.confirm('Tem certeza? Isso apagará tudo!')) return;\n    resetData();\n  };\n\n  // Handler para exportar\n  const handleExport = () => {\n    const dataStr = JSON.stringify(data, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'organograma_backup.json';\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n\n  // Funcionários sem departamento\n  const poolEmployees = data.employees.filter(emp => !emp.dept);\n\n  return (\n    <div className=\"container\">\n      {/* Status de Conexão */}\n      <div className={`status-bar ${status.type} ${status.type !== 'connected' ? 'show' : ''}`}>\n        <span>{status.message}</span>\n      </div>\n\n      {/* Actions */}\n      <div className=\"actions\">\n        <form className=\"add-form\" onSubmit={handleAddEmployee}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Nome do Funcionário\"\n            value={newEmployee.name}\n            onChange={handleNewEmployeeChange}\n            required\n          />\n          <input\n            type=\"text\"\n            name=\"role\"\n            placeholder=\"Cargo\"\n            value={newEmployee.role}\n            onChange={handleNewEmployeeChange}\n            required\n          />\n          <select\n            name=\"dept\"\n            value={newEmployee.dept}\n            onChange={handleNewEmployeeChange}\n          >\n            <option value=\"\">Pool</option>\n            {data.departments.map(dep => (\n              <option key={dep.id} value={dep.id}>\n                {dep.name}\n              </option>\n            ))}\n          </select>\n          <button className=\"btn\" type=\"submit\">Adicionar</button>\n        </form>\n        <button className=\"btn\" onClick={addDepartment}>➕ Departamento</button>\n        <button className=\"btn\" onClick={handleReset}>🔄 Resetar</button>\n        <button className=\"btn\" onClick={handleExport}>💾 Exportar</button>\n        <button className=\"btn\" onClick={testConnection}>🔧 Testar Conexão</button>\n      </div>\n\n      {/* Main Title */}\n      <div className=\"main-title\">\n        {editingTitle === 'title' ? (\n          <input\n            ref={titleInputRef}\n            type=\"text\"\n            value={tempTitle}\n            onChange={(e) => setTempTitle(e.target.value)}\n            onBlur={finishEditingTitle}\n            onKeyDown={handleTitleKeyDown}\n            style={{ fontSize: '1.3em', fontWeight: 'bold' }}\n          />\n        ) : (\n          <h1 onClick={() => startEditingTitle('title')}>\n            {data.title}\n          </h1>\n        )}\n        \n        {editingTitle === 'subtitle' ? (\n          <input\n            ref={titleInputRef}\n            type=\"text\"\n            value={tempTitle}\n            onChange={(e) => setTempTitle(e.target.value)}\n            onBlur={finishEditingTitle}\n            onKeyDown={handleTitleKeyDown}\n            style={{ marginLeft: '18px', fontSize: '1.05em' }}\n          />\n        ) : (\n          <p \n            onClick={() => startEditingTitle('subtitle')}\n            style={{ marginLeft: '18px', fontSize: '1.05em' }}\n          >\n            {data.subtitle}\n          </p>\n        )}\n      </div>\n\n      {/* Employee List */}\n      <div className=\"employee-list\">\n        {/* Employee Pool */}\n        <div \n          className=\"employee-pool\"\n          onDrop={handlePoolDrop}\n          onDragOver={handlePoolDragOver}\n          onDragLeave={handlePoolDragLeave}\n        >\n          <div style={{ marginBottom: '8px', fontWeight: 'bold' }}>\n            Funcionários sem departamento\n          </div>\n          {poolEmployees.map(emp => (\n            <Employee\n              key={emp.id}\n              employee={emp}\n              departments={data.departments}\n              onDragStart={handleDragStart}\n              onDragEnd={handleDragEnd}\n              onEdit={openEmployeeModal}\n              onRemove={removeEmployee}\n            />\n          ))}\n        </div>\n\n        {/* Departments */}\n        <div className=\"departments\">\n          {data.departments.map(dept => (\n            <Department\n              key={dept.id}\n              department={dept}\n              employees={data.employees}\n              departments={data.departments}\n              onDrop={handleDrop}\n              onDragStart={handleDragStart}\n              onDragEnd={handleDragEnd}\n              onEmployeeEdit={openEmployeeModal}\n              onEmployeeRemove={removeEmployee}\n              onDepartmentEdit={openDepartmentModal}\n              onDepartmentRemove={removeDepartment}\n              onTitleEdit={handleDepartmentTitleEdit}\n            />\n          ))}\n        </div>\n      </div>\n\n      {/* Modals */}\n      <EmployeeModal\n        isOpen={employeeModalOpen}\n        onClose={() => setEmployeeModalOpen(false)}\n        employee={currentEmployee}\n        departments={data.departments}\n        onSave={handleEmployeeSave}\n      />\n\n      <DepartmentModal\n        isOpen={departmentModalOpen}\n        onClose={() => setDepartmentModalOpen(false)}\n        department={currentDepartment}\n        onSave={handleDepartmentSave}\n      />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}